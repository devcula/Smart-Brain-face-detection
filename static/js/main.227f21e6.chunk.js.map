{"version":3,"sources":["resources/logo.png","components/NavComponent/Navigation.jsx","components/LogoComponent/Logo.jsx","components/ImageLinkComponent/ImageLinkForm.jsx","components/RankComponent/Rank.jsx","components/BoxComponent/Box.jsx","components/FaceDetectionComponent/FaceDetection.jsx","components/LoginComponent/Login.jsx","components/RegisterComponent/Register.jsx","components/FooterComponent/Footer.jsx","components/RoutingComponent/Router.jsx","components/LoaderComponent/Loader.jsx","redux/actionCreators.js","redux/actionTypeConstants.js","container/App.jsx","serviceWorker.js","redux/reducers.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","props","updateRoute","isSignedIn","react_default","a","createElement","onClick","className","Logo","tilt_default","options","max","style","height","width","src","logo","alt","ImageLinkForm","onInputChange","onButtonSubmit","textAlign","placeholder","type","onChange","Rank","currentUser","concat","name","entries","Box","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","FaceDetection","imageUrl","boxList","id","map","i","components_BoxComponent_Box","key","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","test","target","value","document","getElementById","display","setState","isValidEmail","email","onPasswordChange","password","login","state","changeLoadingStatus","fetch","URI","method","headers","Content-Type","body","JSON","stringify","then","response","json","user","updateUser","alert","message","catch","err","console","log","_this2","htmlFor","required","React","Component","Register","onNameChange","register","res","Footer","href","index_es","icon","faMapMarkerAlt","faPhone","faEnvelope","rel","faGithub","faLinkedin","faTwitter","faInstagram","Router","route","components_LoginComponent_Login","components_FooterComponent_Footer","RankComponent_Rank","components_ImageLinkComponent_ImageLinkForm","FaceDetectionComponent_FaceDetection","boxes","inputUrl","components_RegisterComponent_Register","override","css","_templateObject","Loader","loading","react_spinners","sizeUnit","size","color","onBoxUpdate","payload","changeSignedInStatus","status","particlesOptions","particles","number","density","enable","value_area","App","componentDidMount","imageurl","data","setFaceData","calculateFaceLocation","faceData","outputs","regions","image","faceLocationsData","region","region_info","bounding_box","left_col","right_col","top_row","bottom_row","length","components_LoaderComponent_Loader","particles_default","params","components_NavComponent_Navigation","components_LogoComponent_Logo","RoutingComponent_Router","connect","inputUrlChangeReducer","updateBoxReducer","changeRouteReducer","changeSignedInStatusReducer","updateUserReducer","loadingStatusReducer","dispatch","resetState","changeRoute","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialInputUrlState","initialBoxState","initialRoute","initialSignedInStatus","initialUserState","joined","initialLoadingState","appReducer","combineReducers","arguments","undefined","action","assign","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","es","src_container_App","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.227f21e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c41b5c2d.png\";","import  React from 'react';\nimport './Navigation.css';\n\nconst Navigation = ({ props }) =>{\n    const {updateRoute, isSignedIn} = props;\n    if(isSignedIn) {\n        return (\n            <nav>\n                <p onClick={() => updateRoute('signout')} className=\"f3 dim link pa3 white pointer\">Sign Out</p>\n            </nav>\n        )\n    }\n    else{\n        return (\n            <nav>\n                <p onClick={() => updateRoute('signin')} className=\"f3 dim link pa3 white pointer\">Sign In</p>\n                <p onClick={() => updateRoute('register')} className=\"f3 dim link pa3 white pointer\">Register</p>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport logo from '../../resources/logo.png';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n            <Tilt className=\"Tilt\" options={{ max: 45 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner App-logo\">\n                    <img src={logo} alt=\"logo\"/>\n                </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit })=>{\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <p className=\"f3 white\">\n                {'This Magic Brain will detect faces in your pictures. Give it a try..'}\n            </p>\n            <div className=\"align-center pa4\">\n                <div className=\"align-center shadow-5 form\">\n                    <input \n                    placeholder=\"Enter link to your image\" \n                    type=\"text\" \n                    className=\"pa3 br-pill link-image w-60 f5\" \n                    onChange={onInputChange}\n                    />\n                    <button \n                    className=\"detect-button grow\" \n                    onClick={onButtonSubmit}>\n                        DETECT\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({currentUser})=> {\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <div className=\"white f2\">\n                {`Hello ${currentUser.name}, number of faces that you have detected so far is...`}\n            </div>\n            <div className=\"f1 white\">\n                {currentUser.entries}\n            </div>\n        </div>\n    )\n}\n\nexport default Rank;","import React from 'react';\nimport './Box.css'\n\nconst Box = ({ box }) => {\n    return (\n        <div\n            className=\"bounding-box\"\n            style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}>\n        </div>\n    )\n}\n\nexport default Box;","import React from 'react';\nimport Box from '../BoxComponent/Box.jsx';\n\nconst FaceDetection = ({ imageUrl, boxList })=>{\n    return (\n        <div className=\"align-center\">\n            <div className=\"absolute mt2\">\n                <img id=\"inputimage\" src={ imageUrl } alt=\"\"  width=\"500px\" height=\"auto\"/>\n                {\n                    boxList.map((box,i) =>{\n                        return (\n                            <Box key={i} box={box} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FaceDetection;","import React from 'react';\nimport './Login.css';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            isValidEmail: false\n        }\n    }\n\n    onEmailChange = (event) => {\n        if(/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value)){\n            document.getElementById(\"invalidEmailLabel\").style.display=\"none\";\n            this.setState({isValidEmail: true});\n        }\n        else{\n            document.getElementById(\"invalidEmailLabel\").style.display=\"block\";\n            this.setState({isValidEmail: false});\n        }\n        this.setState({ email: event.target.value });\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ password: event.target.value });\n    }\n\n    login = () => {\n        if (this.state.email && this.state.password && this.state.isValidEmail) {\n            this.props.changeLoadingStatus(true);\n            fetch(this.props.URI + \"/login\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(this.state)\n            }).then(response => {\n                return response.json();\n            })\n                .then(user => {\n                    if (user.id) {\n                        this.props.updateUser(user);\n                        this.props.updateRoute('home');\n                        this.props.changeLoadingStatus(false);\n                    }\n                    else {\n                        alert(user.message);\n                        this.props.changeLoadingStatus(false);\n                    }\n                }).catch(err => {\n                    console.log(err);\n                    alert(\"Technical Error\");\n                });\n        }\n        else {\n            alert(\"Please enter valid email and password\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"align-center login center w-80 br3 shadow-5\">\n                <main className=\"pa4 black-80 login-fields\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0 tc\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email\">Email</label>\n                                <input\n                                    className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    required\n                                    onChange={this.onEmailChange}\n                                />\n                                <p id=\"invalidEmailLabel\" className=\"f5 b red\" style={{display: \"none\"}}>Invalid Email</p>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\n                                <input\n                                    className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    required\n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"tc\">\n                            <input\n                                onClick={this.login}\n                                className=\"w-100 br-pill outline-0 pa4 b ph3 pv2 input-reset ba shadow-5 grow pointer f4 dib\"\n                                type=\"submit\"\n                                value=\"Sign in\" />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => this.props.updateRoute('register')} className=\"f5 tc link dim black db pointer\">Not a member yet? Register!</p>\n                            {/* <a href=\"/\" className=\"f5 link dim black db\">Forgot your password?</a> */}\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport './Register.css';\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            name: \"\",\n            password: \"\",\n            isValidEmail: false\n        }\n    }\n\n    onEmailChange = (event) =>{\n        if(/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value)){\n            document.getElementById(\"invalidEmailLabel\").style.display=\"none\";\n            this.setState({isValidEmail: true});\n        }\n        else{\n            document.getElementById(\"invalidEmailLabel\").style.display=\"block\";\n            this.setState({isValidEmail: false});\n        }\n        this.setState({email: event.target.value});\n    }\n\n    onNameChange = (event) =>{\n        this.setState({name: event.target.value});\n    }\n\n    onPasswordChange = (event) =>{\n        this.setState({password: event.target.value});\n    }\n\n    register = () =>{\n        if(this.state.email && this.state.name && this.state.password && this.state.isValidEmail){\n            this.props.changeLoadingStatus(true);\n            fetch(this.props.URI + \"/register\", {\n                method: \"POST\",\n                body: JSON.stringify(this.state),\n                headers: {\"Content-Type\": \"application/json\"}\n            }).then(response =>  response.json())\n            .then(res => {\n                if(res.id){\n                    this.props.updateUser(res);\n                    this.props.updateRoute('home');\n                    this.props.changeLoadingStatus(false);\n                }\n                else{\n                    alert(res.message);\n                    this.props.changeLoadingStatus(false);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n        else{\n            alert(\"Please enter valid information to register\");\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"align-center register center w-80 br3\">\n                <main className=\"pa4 black-80 register-fields\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0 tc\">Welcome to Smart Brain</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"name\">Name</label>\n                                <input \n                                className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\"  \n                                id=\"name\" \n                                required\n                                onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\"\n                                required \n                                onChange={this.onEmailChange}\n                                />\n                                <p id=\"invalidEmailLabel\" className=\"f5 b red\" style={{display: \"none\"}}>Invalid Email</p>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\n                                <input className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" \n                                required \n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"tc\">\n                            <input\n                            className=\"w-100 br-pill outline-0 pa4 b ph3 pv2 input-reset ba shadow-5 grow pointer f4 dib\" \n                            type=\"submit\" \n                            value=\"Register\" \n                            onClick={this.register}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => this.props.updateRoute('signin')} className=\"pointer tc f5 link dim black db\">Already a member? Login</p>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport './Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram,\n    faTwitter,\n    faGithub,\n    faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarkerAlt, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n    return (\n        <div>\n            <footer className=\"footer-distributed\">\n                <div className=\"footer-left\">\n                    <h3>Smart Brain <span>Face Detection</span></h3>\n                    <p className=\"footer-links\">\n                        <a href=\"/\">Home</a>\n                        ·\n                        <a href=\"/\">Blog</a>\n                        ·\n                        <a href=\"/\">About</a>\n                        ·\n                        <a href=\"/\">Faq</a>\n                        ·\n                        <a href=\"/\">Contact</a>\n                    </p>\n                    <p className=\"footer-company-name\">dEv(uLa &copy; 2019</p>\n                </div>\n                <div className=\"footer-center\">\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faMapMarkerAlt} />\n                        <p><span>Life Republic Township</span> Pune, India</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faPhone} />\n                        <p>+91 6362947321</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon faEnvelope\" icon={faEnvelope} />\n                        <p><a href=\"mailto:devcula@outlook.com\">devcula@outlook.com</a></p>\n                    </div>\n                </div>\n                <div className=\"footer-right\">\n                    <p className=\"footer-company-about\">\n                        <span>About the website</span>\n                        This project is being developed by Abhishek Prasad. This website uses some of latest technologies including <strong>ReactJS, Redux, ExpressJS, NodeJS and Postgresql</strong>.\n                    </p>\n                    <div className=\"footer-icons\">\n                        <a href=\"https://github.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\n                        <a href=\"https://in.linkedin.com/in/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} /></a>\n                        <a href=\"https://twitter.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} /></a>\n                        <a href=\"https://www.instagram.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faInstagram} /></a>\n\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport ImageLinkForm from '../ImageLinkComponent/ImageLinkForm.jsx';\nimport Rank from '../RankComponent/Rank.jsx';\nimport FaceDetection from '../FaceDetectionComponent/FaceDetection.jsx';\nimport Login from '../LoginComponent/Login.jsx';\nimport Register from '../RegisterComponent/Register.jsx';\nimport Footer from '../FooterComponent/Footer';\n\nconst Router = ({props, onButtonSubmit, URI }) => {\n    const {onInputChange, route, updateRoute, updateUser, changeLoadingStatus} = props;\n    if (route === 'signin') {\n        return (\n            <div>\n                <Login \n                changeLoadingStatus={changeLoadingStatus} \n                updateRoute={updateRoute} \n                updateUser={updateUser} \n                URI={URI}/>\n                <Footer />\n            </div>\n        )\n    }\n    else if (route === 'home') {\n        return (\n            <div>\n                <Rank currentUser = {props.currentUser}/>\n                <ImageLinkForm\n                    onInputChange={onInputChange}\n                    onButtonSubmit={onButtonSubmit}\n                    changeLoadingStatus={changeLoadingStatus}\n                />\n                <FaceDetection boxList={props.boxes} imageUrl={props.inputUrl} />\n            </div>\n        )\n    }\n    else if(route === 'register'){\n        return (\n            <div>\n                <Register \n                    changeLoadingStatus={changeLoadingStatus} \n                    updateRoute={updateRoute} \n                    updateUser={updateUser} \n                    URI={URI}\n                /> \n                <Footer />\n            </div>\n        )\n    }\n    else if(route===\"signout\"){\n        return (\n            <div>\n                <Login \n                changeLoadingStatus={changeLoadingStatus} \n                updateRoute={updateRoute} \n                updateUser={updateUser} \n                URI={URI}\n                />\n                <Footer />\n            </div>\n        )\n    }\n    else{\n        \n    }\n}\n\nexport default Router;","import React from \"react\";\nimport './Loader.css'\nimport { css } from '@emotion/core';\nimport { GridLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nconst Loader = ({loading}) =>{\n    if(loading){\n        return (\n            <div className='overlay'>\n              <div className='sweet-loading middle'>\n                <GridLoader\n                  css={override}\n                  sizeUnit={\"px\"}\n                  size={30}\n                  color={'#888888'}\n                  loading={loading}\n                />\n              </div>\n            </div>\n        )\n    }\n    else{\n        return null;\n    }\n}\n\nexport default Loader;","import { CHANGE_INPUT_URL, \n    UPDATE_FACE_BOXES,\n    RESET_APP,\n    CHANGE_ROUTE,\n    CHANGE_SIGNED_IN_STATUS,\n    UPDATE_USER,\n    CHANGE_LOADING_STATUS } \n    from './actionTypeConstants';\n\nexport const onInputChange = (url) => {\n    return {\n        type: CHANGE_INPUT_URL,\n        payload: url\n    }\n}\n\nexport const onBoxUpdate = (boxList) =>{\n    return {\n        type: UPDATE_FACE_BOXES,\n        payload: boxList\n    }\n}\n\nexport const onAppReset = () => {\n    return{\n        type: RESET_APP\n    }\n}\n\nexport const changeRoute = (route) =>{\n    return {\n        type: CHANGE_ROUTE,\n        payload: route\n    }\n}\n\nexport const changeSignedInStatus = (isSignedIn) =>{\n    return {\n        type: CHANGE_SIGNED_IN_STATUS,\n        payload: isSignedIn\n    }\n}\n\nexport const updateUser = (user) =>{\n    return {\n        type: UPDATE_USER,\n        payload: user\n    }\n}\n\nexport const changeLoadingStatus = (status) =>{\n    return {\n        type: CHANGE_LOADING_STATUS,\n        payload: status\n    }\n}","export const CHANGE_INPUT_URL = \"CHANGE_INPUT_URL\";\nexport const UPDATE_FACE_BOXES = \"UPDATE_FACE_BOXES\";\nexport const RESET_APP = \"RESET_APP\";\nexport const CHANGE_ROUTE = \"CHANGE ROUTE\";\nexport const CHANGE_SIGNED_IN_STATUS = \"SIGNED_IN_STATUS\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const CHANGE_LOADING_STATUS = \"CHANGE_LOADING_STATUS\";","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/NavComponent/Navigation.jsx'\nimport Logo from '../components/LogoComponent/Logo.jsx';\nimport Particles from 'react-particles-js';\nimport Router from '../components/RoutingComponent/Router.jsx';\nimport Loader from '../components/LoaderComponent/Loader.jsx';\nimport { connect } from 'react-redux';\nimport {\n  onInputChange,\n  onBoxUpdate,\n  onAppReset,\n  changeRoute,\n  changeSignedInStatus,\n  updateUser,\n  changeLoadingStatus\n}\n  from '../redux/actionCreators';\n\n\nconst URI = \"https://dry-ravine-79367.herokuapp.com\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inputUrl: state.inputUrlChangeReducer.inputUrl,\n    boxes: state.updateBoxReducer.boxes,\n    route: state.changeRouteReducer.route,\n    isSignedIn: state.changeSignedInStatusReducer.isSignedIn,\n    currentUser: state.updateUserReducer.currentUser,\n    loading: state.loadingStatusReducer.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputChange: (event) => {\n      dispatch(onBoxUpdate([]));\n      dispatch(onInputChange(event.target.value));\n    },\n    setFaceData: (boxList) => dispatch(onBoxUpdate(boxList)),\n    resetState: () => dispatch(onAppReset()),\n    updateRoute: (route) => {\n      if (route === \"home\") {\n        dispatch(changeSignedInStatus(true));\n      }\n      else if (route === \"signout\") {\n        dispatch(onAppReset());\n        dispatch(changeLoadingStatus(false));\n      }\n      else {\n        dispatch(changeSignedInStatus(false));\n      }\n      dispatch(changeRoute(route));\n    },\n    updateUser: (user) => dispatch(updateUser(user)),\n    changeLoadingStatus: (status) => dispatch(changeLoadingStatus(status))\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    this.props.changeLoadingStatus(false);\n  }\n\n  onButtonSubmit = () => {\n    if (this.props.inputUrl) {\n      this.props.changeLoadingStatus(true);\n      fetch(URI + \"/clarifai\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: this.props.currentUser.id,\n          imageurl: this.props.inputUrl\n        })\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.props.setFaceData(this.calculateFaceLocation(data));\n          this.props.changeLoadingStatus(false);\n        })\n        .catch(err => {\n          console.log(err);\n          this.props.changeLoadingStatus(false);\n        });\n    }\n    else {\n      alert(\"Please enter a url\");\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const faceData = data.outputs[0].data.regions;\n    if (faceData) {\n      const image = document.getElementById(\"inputimage\");\n      const { height, width } = image;\n      const faceLocationsData = faceData.map(region => {\n        const faceData = region.region_info.bounding_box;\n        return {\n          leftCol: faceData.left_col * width,\n          rightCol: width - (faceData.right_col * width),\n          topRow: faceData.top_row * height,\n          bottomRow: height - (faceData.bottom_row * height)\n        }\n      });\n      fetch(URI + \"/update\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: this.props.currentUser.id,\n          entries: faceData.length\n        })\n      }).then(response => response.json())\n        .then(user => {\n          this.props.updateUser(user);\n        })\n        .catch(err => console.log(err));\n      return faceLocationsData;\n    }\n    else {\n      return [];\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Loader loading={this.props.loading} />\n        <Particles params={particlesOptions} className=\"particles\" />\n        <Navigation props={this.props} />\n        <Logo />\n        <Router\n          props={this.props}\n          onButtonSubmit={this.onButtonSubmit}\n          URI={URI}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport { CHANGE_INPUT_URL, \n    UPDATE_FACE_BOXES, \n    RESET_APP,\n    CHANGE_ROUTE,\n    CHANGE_SIGNED_IN_STATUS,\n    UPDATE_USER,\n    CHANGE_LOADING_STATUS } \n    from './actionTypeConstants';\n\nconst initialInputUrlState = {\n    inputUrl: \"\"\n}\n\nexport const inputUrlChangeReducer = (state = initialInputUrlState, action = {}) =>{\n    switch(action.type){\n        case CHANGE_INPUT_URL:\n            return Object.assign({}, state, { inputUrl: action.payload });\n        default:\n            return state;\n    }\n}\n\nconst initialBoxState = {\n    boxes: []\n}\n\nexport const updateBoxReducer = (state = initialBoxState, action={}) =>{\n    switch(action.type){\n        case UPDATE_FACE_BOXES:\n            return Object.assign({}, state, { boxes: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialRoute = {\n    route: \"signin\"\n}\n\nexport const changeRouteReducer = (state = initialRoute, action = {}) =>{\n    switch(action.type){\n        case CHANGE_ROUTE:\n            return Object.assign({}, state, {route: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialSignedInStatus = {\n    isSignedIn: false\n};\n\nexport const changeSignedInStatusReducer = (state = initialSignedInStatus, action = {}) =>{\n    switch(action.type){\n        case CHANGE_SIGNED_IN_STATUS:\n            return Object.assign({}, state, {isSignedIn: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialUserState = {\n    currentUser: {\n        id: \"\",\n        email: \"\",\n        name: \"\",\n        entries: \"\",\n        joined: \"\"\n    }\n}\n\nexport const updateUserReducer = (state = initialUserState, action = {})=>{\n    switch(action.type){\n        case UPDATE_USER:\n            return Object.assign({}, state, {currentUser: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialLoadingState = {\n    loading: true\n}\n\nexport const loadingStatusReducer = (state= initialLoadingState, action={}) =>{\n    switch(action.type){\n        case CHANGE_LOADING_STATUS:\n            return Object.assign({},state,{loading: action.payload});\n        default:\n            return state;\n    }\n}\n\nexport const appReducer = combineReducers({inputUrlChangeReducer, \n    updateBoxReducer, \n    changeRouteReducer, \n    changeSignedInStatusReducer,\n    updateUserReducer,\n    loadingStatusReducer    \n});\n\nexport const rootReducer = (state, action) =>{\n    switch(action.type){\n        case RESET_APP:\n            return appReducer(undefined, action);\n        default:\n            return appReducer(state, action);\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport { rootReducer } from './redux/reducers';\nimport { createLogger } from 'redux-logger';\n\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nReactDOM.render(<Provider store={store}>\n        <App />\n    </Provider>\n    , \n    document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}