{"version":3,"sources":["resources/logo.png","components/NavComponent/Navigation.jsx","components/LogoComponent/Logo.jsx","components/ImageLinkComponent/ImageLinkForm.jsx","components/RankComponent/Rank.jsx","components/BoxComponent/Box.jsx","components/FaceDetectionComponent/FaceDetection.jsx","components/LoginComponent/Login.jsx","components/RegisterComponent/Register.jsx","components/FooterComponent/Footer.jsx","components/RoutingComponent/Router.jsx","components/LoaderComponent/Loader.jsx","redux/actionCreators.js","redux/actionTypeConstants.js","container/App.jsx","serviceWorker.js","redux/reducers.js","index.js"],"names":["module","exports","Navigation","props","updateRoute","isSignedIn","onClick","className","Logo","options","max","style","height","width","src","logo","alt","ImageLinkForm","onInputChange","onButtonSubmit","textAlign","placeholder","type","onChange","Rank","currentUser","name","entries","Box","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","FaceDetection","imageUrl","boxList","id","map","i","key","Login","onEmailChange","event","test","target","value","document","getElementById","display","setState","isValidEmail","email","onPasswordChange","password","login","state","changeLoadingStatus","fetch","URI","method","headers","body","JSON","stringify","then","response","json","user","updateUser","alert","message","catch","err","console","log","htmlFor","required","this","React","Component","Register","onNameChange","register","res","Footer","href","icon","faMapMarkerAlt","faPhone","faEnvelope","rel","faGithub","title","faLinkedin","faTwitter","faInstagram","Router","route","boxes","inputUrl","override","css","Loader","loading","sizeUnit","size","color","onBoxUpdate","payload","changeSignedInStatus","status","particlesOptions","particles","number","density","enable","value_area","App","componentDidMount","imageurl","data","setFaceData","calculateFaceLocation","faceData","outputs","regions","image","faceLocationsData","region","region_info","bounding_box","left_col","right_col","top_row","bottom_row","length","params","connect","inputUrlChangeReducer","updateBoxReducer","changeRouteReducer","changeSignedInStatusReducer","updateUserReducer","loadingStatusReducer","dispatch","resetState","changeRoute","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialInputUrlState","initialBoxState","initialRoute","initialSignedInStatus","initialUserState","joined","initialLoadingState","appReducer","combineReducers","action","Object","assign","store","createStore","undefined","ReactDOM","render","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6909c68f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1f203384.png\";","import  React from 'react';\nimport './Navigation.css';\n\nconst Navigation = ({ props }) =>{\n    const {updateRoute, isSignedIn} = props;\n    if(isSignedIn) {\n        return (\n            <nav>\n                <p onClick={() => updateRoute('signout')} className=\"f3 dim link pa3 white pointer\">Sign Out</p>\n            </nav>\n        )\n    }\n    else{\n        return (\n            <nav>\n                <p onClick={() => updateRoute('signin')} className=\"f3 dim link pa3 white pointer\">Sign In</p>\n                <p onClick={() => updateRoute('register')} className=\"f3 dim link pa3 white pointer\">Register</p>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport logo from '../../resources/logo.png';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n            <Tilt className=\"Tilt\" options={{ max: 45 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner App-logo\">\n                    <img src={logo} alt=\"logo\"/>\n                </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit })=>{\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <p className=\"f3 white\">\n                {'This Magic Brain will detect faces in your pictures. Give it a try..'}\n            </p>\n            <div className=\"align-center pa4\">\n                <div className=\"align-center shadow-5 form\">\n                    <input \n                    placeholder=\"Enter link to your image\" \n                    type=\"text\" \n                    className=\"pa3 br-pill link-image w-60 f5\" \n                    onChange={onInputChange}\n                    />\n                    <button \n                    className=\"detect-button grow\" \n                    onClick={onButtonSubmit}>\n                        DETECT\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({currentUser})=> {\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <div className=\"white f2\">\n                {`Hello ${currentUser.name}, number of faces that you have detected so far is...`}\n            </div>\n            <div className=\"f1 white\">\n                {currentUser.entries}\n            </div>\n        </div>\n    )\n}\n\nexport default Rank;","import React from 'react';\nimport './Box.css'\n\nconst Box = ({ box }) => {\n    return (\n        <div\n            className=\"bounding-box\"\n            style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}>\n        </div>\n    )\n}\n\nexport default Box;","import React from 'react';\nimport Box from '../BoxComponent/Box.jsx';\n\nconst FaceDetection = ({ imageUrl, boxList })=>{\n    return (\n        <div className=\"align-center\">\n            <div className=\"absolute mt2\">\n                <img id=\"inputimage\" src={ imageUrl } alt=\"\"  width=\"500px\" height=\"auto\"/>\n                {\n                    boxList.map((box,i) =>{\n                        return (\n                            <Box key={i} box={box} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FaceDetection;","import React from 'react';\nimport './Login.css';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            isValidEmail: false\n        }\n    }\n\n    onEmailChange = (event) => {\n        if(/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value)){\n            document.getElementById(\"invalidEmailLabel\").style.display=\"none\";\n            this.setState({isValidEmail: true});\n        }\n        else{\n            document.getElementById(\"invalidEmailLabel\").style.display=\"block\";\n            this.setState({isValidEmail: false});\n        }\n        this.setState({ email: event.target.value });\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ password: event.target.value });\n    }\n\n    login = () => {\n        if (this.state.email && this.state.password && this.state.isValidEmail) {\n            this.props.changeLoadingStatus(true);\n            fetch(this.props.URI + \"/login\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(this.state)\n            }).then(response => {\n                return response.json();\n            })\n                .then(user => {\n                    if (user.id) {\n                        this.props.updateUser(user);\n                        this.props.updateRoute('home');\n                        this.props.changeLoadingStatus(false);\n                    }\n                    else {\n                        alert(user.message);\n                        this.props.changeLoadingStatus(false);\n                    }\n                }).catch(err => {\n                    console.log(err);\n                    alert(\"Technical Error\");\n                    this.props.changeLoadingStatus(false);\n                });\n        }\n        else {\n            alert(\"Please enter valid email and password\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"align-center login center w-80 br3 shadow-5\">\n                <main className=\"pa4 black-80 login-fields\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0 tc\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email\">Email</label>\n                                <input\n                                    className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    required\n                                    onChange={this.onEmailChange}\n                                />\n                                <p id=\"invalidEmailLabel\" className=\"f5 b red\" style={{display: \"none\"}}>Invalid Email</p>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\n                                <input\n                                    className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    required\n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"tc\">\n                            <input\n                                onClick={this.login}\n                                className=\"w-100 br-pill outline-0 pa4 b ph3 pv2 input-reset ba shadow-5 grow pointer f4 dib\"\n                                type=\"submit\"\n                                value=\"Sign in\" />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => this.props.updateRoute('register')} className=\"f5 tc link dim black db pointer\">Not a member yet? Register!</p>\n                            {/* <a href=\"/\" className=\"f5 link dim black db\">Forgot your password?</a> */}\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport './Register.css';\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            name: \"\",\n            password: \"\",\n            isValidEmail: false\n        }\n    }\n\n    onEmailChange = (event) =>{\n        if(/^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value)){\n            document.getElementById(\"invalidEmailLabel\").style.display=\"none\";\n            this.setState({isValidEmail: true});\n        }\n        else{\n            document.getElementById(\"invalidEmailLabel\").style.display=\"block\";\n            this.setState({isValidEmail: false});\n        }\n        this.setState({email: event.target.value});\n    }\n\n    onNameChange = (event) =>{\n        this.setState({name: event.target.value});\n    }\n\n    onPasswordChange = (event) =>{\n        this.setState({password: event.target.value});\n    }\n\n    register = () =>{\n        if(this.state.email && this.state.name && this.state.password && this.state.isValidEmail){\n            this.props.changeLoadingStatus(true);\n            fetch(this.props.URI + \"/register\", {\n                method: \"POST\",\n                body: JSON.stringify(this.state),\n                headers: {\"Content-Type\": \"application/json\"}\n            }).then(response =>  response.json())\n            .then(res => {\n                if(res.id){\n                    this.props.updateUser(res);\n                    this.props.updateRoute('home');\n                    this.props.changeLoadingStatus(false);\n                }\n                else{\n                    alert(res.message);\n                    this.props.changeLoadingStatus(false);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n        else{\n            alert(\"Please enter valid information to register\");\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"align-center register center w-80 br3\">\n                <main className=\"pa4 black-80 register-fields\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0 tc\">Welcome to Smart Brain</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"name\">Name</label>\n                                <input \n                                className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\"  \n                                id=\"name\" \n                                required\n                                onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\"\n                                required \n                                onChange={this.onEmailChange}\n                                />\n                                <p id=\"invalidEmailLabel\" className=\"f5 b red\" style={{display: \"none\"}}>Invalid Email</p>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">Password</label>\n                                <input className=\"br-pill outline-0 shadow-5 pa3 input-reset bn bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" \n                                required \n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"tc\">\n                            <input\n                            className=\"w-100 br-pill outline-0 pa4 b ph3 pv2 input-reset ba shadow-5 grow pointer f4 dib\" \n                            type=\"submit\" \n                            value=\"Register\" \n                            onClick={this.register}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => this.props.updateRoute('signin')} className=\"pointer tc f5 link dim black db\">Already a member? Login</p>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport './Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram,\n    faTwitter,\n    faGithub,\n    faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarkerAlt, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n    return (\n        <div>\n            <footer className=\"footer-distributed\">\n                <div className=\"footer-left\">\n                    <h3>Smart Brain <span>Face Detection</span></h3>\n                    <p className=\"footer-links\">\n                        <a href=\"/\">Home</a>\n                        ·\n                        <a href=\"/\">Blog</a>\n                        ·\n                        <a href=\"/\">About</a>\n                        ·\n                        <a href=\"/\">Faq</a>\n                        ·\n                        <a href=\"/\">Contact</a>\n                    </p>\n                    <p className=\"footer-company-name\">dEv(uLa &copy; 2019</p>\n                </div>\n                <div className=\"footer-center\">\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faMapMarkerAlt} />\n                        <p><span>Life Republic Township</span> Pune, India</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon\" icon={faPhone} />\n                        <p>+91 6362947321</p>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon className=\"faIcon faEnvelope\" icon={faEnvelope} />\n                        <p><a href=\"mailto:devcula@outlook.com\">devcula@outlook.com</a></p>\n                    </div>\n                </div>\n                <div className=\"footer-right\">\n                    <p className=\"footer-company-about\">\n                        <span>About the website</span>\n                        This project is being developed by Abhishek Prasad. This website uses some of latest technologies including <strong>ReactJS, Redux, ExpressJS, NodeJS and Postgresql</strong>.\n                    </p>\n                    <div className=\"footer-icons\">\n                        <a href=\"https://github.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} title=\"Github\" /></a>\n                        <a href=\"https://in.linkedin.com/in/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} title=\"Linkedin\" /></a>\n                        <a href=\"https://twitter.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} title=\"Twitter\" /></a>\n                        <a href=\"https://www.instagram.com/devcula\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faInstagram} title=\"Instagram\" /></a>\n\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport ImageLinkForm from '../ImageLinkComponent/ImageLinkForm.jsx';\nimport Rank from '../RankComponent/Rank.jsx';\nimport FaceDetection from '../FaceDetectionComponent/FaceDetection.jsx';\nimport Login from '../LoginComponent/Login.jsx';\nimport Register from '../RegisterComponent/Register.jsx';\nimport Footer from '../FooterComponent/Footer';\n\nconst Router = ({props, onButtonSubmit, URI }) => {\n    const {onInputChange, route, updateRoute, updateUser, changeLoadingStatus} = props;\n    if (route === 'signin') {\n        return (\n            <div>\n                <Login \n                changeLoadingStatus={changeLoadingStatus} \n                updateRoute={updateRoute} \n                updateUser={updateUser} \n                URI={URI}/>\n                <Footer />\n            </div>\n        )\n    }\n    else if (route === 'home') {\n        return (\n            <div>\n                <Rank currentUser = {props.currentUser}/>\n                <ImageLinkForm\n                    onInputChange={onInputChange}\n                    onButtonSubmit={onButtonSubmit}\n                    changeLoadingStatus={changeLoadingStatus}\n                />\n                <FaceDetection boxList={props.boxes} imageUrl={props.inputUrl} />\n            </div>\n        )\n    }\n    else if(route === 'register'){\n        return (\n            <div>\n                <Register \n                    changeLoadingStatus={changeLoadingStatus} \n                    updateRoute={updateRoute} \n                    updateUser={updateUser} \n                    URI={URI}\n                /> \n                <Footer />\n            </div>\n        )\n    }\n    else if(route===\"signout\"){\n        return (\n            <div>\n                <Login \n                changeLoadingStatus={changeLoadingStatus} \n                updateRoute={updateRoute} \n                updateUser={updateUser} \n                URI={URI}\n                />\n                <Footer />\n            </div>\n        )\n    }\n    else{\n        \n    }\n}\n\nexport default Router;","import React from \"react\";\nimport './Loader.css'\nimport { css } from '@emotion/core';\nimport { GridLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nconst Loader = ({loading}) =>{\n    if(loading){\n        return (\n            <div className='overlay'>\n              <div className='sweet-loading middle'>\n                <GridLoader\n                  css={override}\n                  sizeUnit={\"px\"}\n                  size={30}\n                  color={'#888888'}\n                  loading={loading}\n                />\n              </div>\n            </div>\n        )\n    }\n    else{\n        return null;\n    }\n}\n\nexport default Loader;","import { CHANGE_INPUT_URL, \n    UPDATE_FACE_BOXES,\n    RESET_APP,\n    CHANGE_ROUTE,\n    CHANGE_SIGNED_IN_STATUS,\n    UPDATE_USER,\n    CHANGE_LOADING_STATUS } \n    from './actionTypeConstants';\n\nexport const onInputChange = (url) => {\n    return {\n        type: CHANGE_INPUT_URL,\n        payload: url\n    }\n}\n\nexport const onBoxUpdate = (boxList) =>{\n    return {\n        type: UPDATE_FACE_BOXES,\n        payload: boxList\n    }\n}\n\nexport const onAppReset = () => {\n    return{\n        type: RESET_APP\n    }\n}\n\nexport const changeRoute = (route) =>{\n    return {\n        type: CHANGE_ROUTE,\n        payload: route\n    }\n}\n\nexport const changeSignedInStatus = (isSignedIn) =>{\n    return {\n        type: CHANGE_SIGNED_IN_STATUS,\n        payload: isSignedIn\n    }\n}\n\nexport const updateUser = (user) =>{\n    return {\n        type: UPDATE_USER,\n        payload: user\n    }\n}\n\nexport const changeLoadingStatus = (status) =>{\n    return {\n        type: CHANGE_LOADING_STATUS,\n        payload: status\n    }\n}","export const CHANGE_INPUT_URL = \"CHANGE_INPUT_URL\";\nexport const UPDATE_FACE_BOXES = \"UPDATE_FACE_BOXES\";\nexport const RESET_APP = \"RESET_APP\";\nexport const CHANGE_ROUTE = \"CHANGE ROUTE\";\nexport const CHANGE_SIGNED_IN_STATUS = \"SIGNED_IN_STATUS\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const CHANGE_LOADING_STATUS = \"CHANGE_LOADING_STATUS\";","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/NavComponent/Navigation.jsx'\nimport Logo from '../components/LogoComponent/Logo.jsx';\nimport Particles from 'react-particles-js';\nimport Router from '../components/RoutingComponent/Router.jsx';\nimport Loader from '../components/LoaderComponent/Loader.jsx';\nimport { connect } from 'react-redux';\nimport {\n  onInputChange,\n  onBoxUpdate,\n  onAppReset,\n  changeRoute,\n  changeSignedInStatus,\n  updateUser,\n  changeLoadingStatus\n}\n  from '../redux/actionCreators';\n\n\nconst URI = \"https://dry-ravine-79367.herokuapp.com\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    inputUrl: state.inputUrlChangeReducer.inputUrl,\n    boxes: state.updateBoxReducer.boxes,\n    route: state.changeRouteReducer.route,\n    isSignedIn: state.changeSignedInStatusReducer.isSignedIn,\n    currentUser: state.updateUserReducer.currentUser,\n    loading: state.loadingStatusReducer.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputChange: (event) => {\n      dispatch(onBoxUpdate([]));\n      dispatch(onInputChange(event.target.value));\n    },\n    setFaceData: (boxList) => dispatch(onBoxUpdate(boxList)),\n    resetState: () => dispatch(onAppReset()),\n    updateRoute: (route) => {\n      if (route === \"home\") {\n        dispatch(changeSignedInStatus(true));\n      }\n      else if (route === \"signout\") {\n        dispatch(onAppReset());\n        dispatch(changeLoadingStatus(false));\n      }\n      else {\n        dispatch(changeSignedInStatus(false));\n      }\n      dispatch(changeRoute(route));\n    },\n    updateUser: (user) => dispatch(updateUser(user)),\n    changeLoadingStatus: (status) => dispatch(changeLoadingStatus(status))\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    this.props.changeLoadingStatus(false);\n  }\n\n  onButtonSubmit = () => {\n    if (this.props.inputUrl) {\n      this.props.changeLoadingStatus(true);\n      fetch(URI + \"/clarifai\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: this.props.currentUser.id,\n          imageurl: this.props.inputUrl\n        })\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.props.setFaceData(this.calculateFaceLocation(data));\n          this.props.changeLoadingStatus(false);\n        })\n        .catch(err => {\n          console.log(err);\n          this.props.changeLoadingStatus(false);\n        });\n    }\n    else {\n      alert(\"Please enter a url\");\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const faceData = data.outputs[0].data.regions;\n    if (faceData) {\n      const image = document.getElementById(\"inputimage\");\n      const { height, width } = image;\n      const faceLocationsData = faceData.map(region => {\n        const faceData = region.region_info.bounding_box;\n        return {\n          leftCol: faceData.left_col * width,\n          rightCol: width - (faceData.right_col * width),\n          topRow: faceData.top_row * height,\n          bottomRow: height - (faceData.bottom_row * height)\n        }\n      });\n      fetch(URI + \"/update\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id: this.props.currentUser.id,\n          entries: faceData.length\n        })\n      }).then(response => response.json())\n        .then(user => {\n          this.props.updateUser(user);\n        })\n        .catch(err => console.log(err));\n      return faceLocationsData;\n    }\n    else {\n      return [];\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Loader loading={this.props.loading} />\n        <Particles params={particlesOptions} className=\"particles\" />\n        <Navigation props={this.props} />\n        <Logo />\n        <Router\n          props={this.props}\n          onButtonSubmit={this.onButtonSubmit}\n          URI={URI}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport { CHANGE_INPUT_URL, \n    UPDATE_FACE_BOXES, \n    RESET_APP,\n    CHANGE_ROUTE,\n    CHANGE_SIGNED_IN_STATUS,\n    UPDATE_USER,\n    CHANGE_LOADING_STATUS } \n    from './actionTypeConstants';\n\nconst initialInputUrlState = {\n    inputUrl: \"\"\n}\n\nexport const inputUrlChangeReducer = (state = initialInputUrlState, action = {}) =>{\n    switch(action.type){\n        case CHANGE_INPUT_URL:\n            return Object.assign({}, state, { inputUrl: action.payload });\n        default:\n            return state;\n    }\n}\n\nconst initialBoxState = {\n    boxes: []\n}\n\nexport const updateBoxReducer = (state = initialBoxState, action={}) =>{\n    switch(action.type){\n        case UPDATE_FACE_BOXES:\n            return Object.assign({}, state, { boxes: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialRoute = {\n    route: \"signin\"\n}\n\nexport const changeRouteReducer = (state = initialRoute, action = {}) =>{\n    switch(action.type){\n        case CHANGE_ROUTE:\n            return Object.assign({}, state, {route: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialSignedInStatus = {\n    isSignedIn: false\n};\n\nexport const changeSignedInStatusReducer = (state = initialSignedInStatus, action = {}) =>{\n    switch(action.type){\n        case CHANGE_SIGNED_IN_STATUS:\n            return Object.assign({}, state, {isSignedIn: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialUserState = {\n    currentUser: {\n        id: \"\",\n        email: \"\",\n        name: \"\",\n        entries: \"\",\n        joined: \"\"\n    }\n}\n\nexport const updateUserReducer = (state = initialUserState, action = {})=>{\n    switch(action.type){\n        case UPDATE_USER:\n            return Object.assign({}, state, {currentUser: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialLoadingState = {\n    loading: true\n}\n\nexport const loadingStatusReducer = (state= initialLoadingState, action={}) =>{\n    switch(action.type){\n        case CHANGE_LOADING_STATUS:\n            return Object.assign({},state,{loading: action.payload});\n        default:\n            return state;\n    }\n}\n\nexport const appReducer = combineReducers({inputUrlChangeReducer, \n    updateBoxReducer, \n    changeRouteReducer, \n    changeSignedInStatusReducer,\n    updateUserReducer,\n    loadingStatusReducer    \n});\n\nexport const rootReducer = (state, action) =>{\n    switch(action.type){\n        case RESET_APP:\n            return appReducer(undefined, action);\n        default:\n            return appReducer(state, action);\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n// import {createStore, applyMiddleware} from 'redux';\nimport {createStore} from 'redux';\nimport { rootReducer } from './redux/reducers';\n// import { createLogger } from 'redux-logger';\n\nimport 'tachyons';\n\n// const logger = createLogger();\n\n// const store = createStore(rootReducer, applyMiddleware(logger));\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}>\n        <App />\n    </Provider>\n    , \n    document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}